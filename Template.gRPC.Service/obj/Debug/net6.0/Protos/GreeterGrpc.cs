// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greeter.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Template.gRPC.Service {
  public static partial class GreetService
  {
    static readonly string __ServiceName = "greet.GreetService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Template.gRPC.Service.GreetRequest> __Marshaller_greet_GreetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Template.gRPC.Service.GreetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Template.gRPC.Service.GreetResponse> __Marshaller_greet_GreetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Template.gRPC.Service.GreetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Template.gRPC.Service.GreetManyTimesRequest> __Marshaller_greet_GreetManyTimesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Template.gRPC.Service.GreetManyTimesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Template.gRPC.Service.GreetManytimesResponse> __Marshaller_greet_GreetManytimesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Template.gRPC.Service.GreetManytimesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Template.gRPC.Service.LongGreetRequest> __Marshaller_greet_LongGreetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Template.gRPC.Service.LongGreetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Template.gRPC.Service.LongGreetResponse> __Marshaller_greet_LongGreetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Template.gRPC.Service.LongGreetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Template.gRPC.Service.GreetEveryoneRequest> __Marshaller_greet_GreetEveryoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Template.gRPC.Service.GreetEveryoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Template.gRPC.Service.GreetEveryoneResponse> __Marshaller_greet_GreetEveryoneResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Template.gRPC.Service.GreetEveryoneResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Template.gRPC.Service.GreetWithDeadlineRequest> __Marshaller_greet_GreetWithDeadlineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Template.gRPC.Service.GreetWithDeadlineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Template.gRPC.Service.GreetWithDeadlineResponse> __Marshaller_greet_GreetWithDeadlineResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Template.gRPC.Service.GreetWithDeadlineResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Template.gRPC.Service.GreetRequest, global::Template.gRPC.Service.GreetResponse> __Method_Greet = new grpc::Method<global::Template.gRPC.Service.GreetRequest, global::Template.gRPC.Service.GreetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Greet",
        __Marshaller_greet_GreetRequest,
        __Marshaller_greet_GreetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Template.gRPC.Service.GreetManyTimesRequest, global::Template.gRPC.Service.GreetManytimesResponse> __Method_GreetManyTimes = new grpc::Method<global::Template.gRPC.Service.GreetManyTimesRequest, global::Template.gRPC.Service.GreetManytimesResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GreetManyTimes",
        __Marshaller_greet_GreetManyTimesRequest,
        __Marshaller_greet_GreetManytimesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Template.gRPC.Service.LongGreetRequest, global::Template.gRPC.Service.LongGreetResponse> __Method_LongGreet = new grpc::Method<global::Template.gRPC.Service.LongGreetRequest, global::Template.gRPC.Service.LongGreetResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "LongGreet",
        __Marshaller_greet_LongGreetRequest,
        __Marshaller_greet_LongGreetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Template.gRPC.Service.GreetEveryoneRequest, global::Template.gRPC.Service.GreetEveryoneResponse> __Method_GreetEveryone = new grpc::Method<global::Template.gRPC.Service.GreetEveryoneRequest, global::Template.gRPC.Service.GreetEveryoneResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "GreetEveryone",
        __Marshaller_greet_GreetEveryoneRequest,
        __Marshaller_greet_GreetEveryoneResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Template.gRPC.Service.GreetWithDeadlineRequest, global::Template.gRPC.Service.GreetWithDeadlineResponse> __Method_GreetWithDeadline = new grpc::Method<global::Template.gRPC.Service.GreetWithDeadlineRequest, global::Template.gRPC.Service.GreetWithDeadlineResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GreetWithDeadline",
        __Marshaller_greet_GreetWithDeadlineRequest,
        __Marshaller_greet_GreetWithDeadlineResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Template.gRPC.Service.GreeterReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GreetService</summary>
    [grpc::BindServiceMethod(typeof(GreetService), "BindService")]
    public abstract partial class GreetServiceBase
    {
      /// <summary>
      /// Unary
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Template.gRPC.Service.GreetResponse> Greet(global::Template.gRPC.Service.GreetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Server Streaming
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GreetManyTimes(global::Template.gRPC.Service.GreetManyTimesRequest request, grpc::IServerStreamWriter<global::Template.gRPC.Service.GreetManytimesResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Client Streaming
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Template.gRPC.Service.LongGreetResponse> LongGreet(grpc::IAsyncStreamReader<global::Template.gRPC.Service.LongGreetRequest> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// BiDi Streaming
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GreetEveryone(grpc::IAsyncStreamReader<global::Template.gRPC.Service.GreetEveryoneRequest> requestStream, grpc::IServerStreamWriter<global::Template.gRPC.Service.GreetEveryoneResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unary With Deadline
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Template.gRPC.Service.GreetWithDeadlineResponse> GreetWithDeadline(global::Template.gRPC.Service.GreetWithDeadlineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(GreetServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Greet, serviceImpl.Greet)
          .AddMethod(__Method_GreetManyTimes, serviceImpl.GreetManyTimes)
          .AddMethod(__Method_LongGreet, serviceImpl.LongGreet)
          .AddMethod(__Method_GreetEveryone, serviceImpl.GreetEveryone)
          .AddMethod(__Method_GreetWithDeadline, serviceImpl.GreetWithDeadline).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GreetServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Greet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Template.gRPC.Service.GreetRequest, global::Template.gRPC.Service.GreetResponse>(serviceImpl.Greet));
      serviceBinder.AddMethod(__Method_GreetManyTimes, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Template.gRPC.Service.GreetManyTimesRequest, global::Template.gRPC.Service.GreetManytimesResponse>(serviceImpl.GreetManyTimes));
      serviceBinder.AddMethod(__Method_LongGreet, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::Template.gRPC.Service.LongGreetRequest, global::Template.gRPC.Service.LongGreetResponse>(serviceImpl.LongGreet));
      serviceBinder.AddMethod(__Method_GreetEveryone, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Template.gRPC.Service.GreetEveryoneRequest, global::Template.gRPC.Service.GreetEveryoneResponse>(serviceImpl.GreetEveryone));
      serviceBinder.AddMethod(__Method_GreetWithDeadline, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Template.gRPC.Service.GreetWithDeadlineRequest, global::Template.gRPC.Service.GreetWithDeadlineResponse>(serviceImpl.GreetWithDeadline));
    }

  }
}
#endregion
